<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <context:annotation-config/>
    <context:component-scan base-package="marxo.controller"/>
    <context:component-scan base-package="marxo.exception"/>
    <context:component-scan base-package="marxo.filter"/>

    <mvc:annotation-driven content-negotiation-manager="contentNegotiationManager"/>
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <ref bean="marxoInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>

    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <property name="contentNegotiationManager" ref="contentNegotiationManager"/>
        <property name="viewResolvers">
            <list>
                <bean class="org.springframework.web.servlet.view.BeanNameViewResolver"/>
            </list>
        </property>
        <property name="defaultViews">
            <list>
                <bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
                    <!-- The following prevents Jackson evilly wrap your JSON. Why the fuck you need that? http://stackoverflow.com/questions/6479712/why-is-jackson-wrapping-my-objects-with-an-extra-layer-named-after-the-class -->
                    <property name="extractValueFromSingleKeyModel" value="true"/>
                </bean>
            </list>
        </property>
    </bean>

    <!--<bean name="handlerAdapter" class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">-->
    <!--<property name="useSuffixPatternMatch" value="true"/>-->
    <!--<property name="useRegisteredSuffixPatternMatch" value="true"/>-->
    <!--<property name="useTrailingSlashMatch" value="false"/>-->
    <!--</bean>-->

    <bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <property name="defaultContentType" value="application/json"/>
        <!-- Disable it for it will disrupted by end url with email, e.g. test@example.com, it will use .com as media contextType -->
        <property name="favorPathExtension" value="false"/>
        <!-- The following accept .json as the path extension and set the media header to related contextType. -->
        <!--<property name="favorPathExtension" value="true"/>-->
        <!--<property name="useJaf" value="false"/>-->
        <!--<property name="mediaTypes">-->
        <!--<map>-->
        <!--<entry key="json" value="application/json"/>-->
        <!--</map>-->
        <!--</property>-->
    </bean>
</beans>
